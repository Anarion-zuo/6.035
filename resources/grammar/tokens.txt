# reserved words
bool {bool}
boolean {boolean}
callout {callout}
class {class}
break {break}
import {import}
continue {continue}
else {else}
for {for}
while {while}
if {if}
int {int}
return {return}
len {len}
void {void}

# comments
singleline_comment {//[^\n]*\n}
multiline_comment {/\*.*\*/}

# ignores
whitespace {( |\t)*}
newline {\n|\r}

# literal
string_literal {"([^"]|\\")*"}
char_literal {('[^'"\n\t]')|('\\[nrt\\"'?]')}
hex_literal {0x[0-9a-fA-F][0-9a-fA-F]*}
dec_literal {([1-9][0-9]*)|(0)}
boolean_literal {(true)|(false)}

identifier {([^."'/ \n\r\t])([^."'/ \n\r\t])*}

# operator
minus {-}
#plus {+}
#prod {*}
#divide {/}
#equ {=}
#and {&}
#and_logic {&&}
#or {|}
#or_logic {||}
#xor {^}
#xor_logic {^^}
#plus_equ {+=}
#minus_equ {-=}
#l_cmp {<}
#le_cmp {<=}
